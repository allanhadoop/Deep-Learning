# Source - http://blog.niandrei.com/2016/03/01/install-tensorflow-on-ubuntu-with-virtualenv/
# Additional sources - 
https://www.tensorflow.org/versions/r0.7/get_started/os_setup.html#test-the-tensorflow-installation
https://www.tensorflow.org/versions/r0.7/get_started/os_setup.html#virtualenv-installation
--------------------------------------------------------------------------------------------------
# Get pip and virutal env 
sudo apt-get install python-pip python-dev python-virtualenv

# set virtual env
virtualenv --system-site-packages ~/tensorflow

# activate virtual env for tensorflow
source ~/tensorflow/bin/activate

#install cpu version of tensorflow from google
pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl

#Find tensorflow location to add your code 
python -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'

# output of above command -- go to that location and add new file test.py
Write some sample code in test.py 
#example copied from source location above  
import tensorflow as tf
import numpy as np

# Create 100 phony x, y data points in NumPy, y = x * 0.1 + 0.3
x_data = np.random.rand(100).astype(np.float32)
y_data = x_data * 0.1 + 0.3

# Try to find values for W and b that compute y_data = W * x_data + b
# (We know that W should be 0.1 and b 0.3, but Tensorflow will
# figure that out for us.)
W = tf.Variable(tf.random_uniform([1], -1.0, 1.0))
b = tf.Variable(tf.zeros([1]))
y = W * x_data + b

# Minimize the mean squared errors.
loss = tf.reduce_mean(tf.square(y - y_data))
optimizer = tf.train.GradientDescentOptimizer(0.5)
train = optimizer.minimize(loss)

# Before starting, initialize the variables.  We will 'run' this first.
init = tf.initialize_all_variables()

# Launch the graph.
sess = tf.Session()
sess.run(init)

# Fit the line.
for step in xrange(201):
    sess.run(train)
    if step % 20 == 0:
        print(step, sess.run(W), sess.run(b))

# Learns best fit is W: [0.1], b: [0.3]


## now , start the test project:
python -m tensorflow.test




